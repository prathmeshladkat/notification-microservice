// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model NotificationRequest {
  id            String @id @default(uuid())
  userId        String
  title         String
  body          String
  emailTo       String?
  smsTo         String?
  pushToken     String?
  whatsapp      String?
  createdAt     DateTime @default(now())

  deliveries Delivery[]

  @@index([userId])
}

model Delivery {
  id              String @id @default(uuid())
  channel         Channel
  status          Status
  errorMessage    String?
  sentAt          DateTime @default(now())

  notificationId  String
  notification    NotificationRequest @relation(fields: [notificationId], references: [id])

  @@index([notificationId])
  @@index([channel])
}

model PushToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model DeliveryMetricsSummary {
  id        Int      @id @default(autoincrement())
  channel   Channel
  status    Status
  count     Int      @default(0)
  date      DateTime

  @@index([date, channel, status])
}

enum Channel {
  EMAIL 
  SMS 
  PUSH 
  WHATSAPP
}

enum Status {
  SUCCESS 
  FAILURE
  PENDING
}